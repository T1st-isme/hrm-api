// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Employee {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  username       String   @unique
  email          String   @unique
  password       String
  profilePicture String?
  contactNumber  String?
  fullName       String
  dateOfBirth    DateTime
  address        String
  employmentStartDate DateTime @default(now())
  jobTitle       String
  department     Department? @relation(fields: [departmentId], references: [id])
  departmentId   String? @db.ObjectId
  salary         Float?
  salaryCriteria SalaryCriteria? @relation(fields: [salaryCriteriaId], references: [id])
  salaryCriteriaId String? @db.ObjectId
  leaveRequests  LeaveRequest[]
  payrolls       Payroll[]
}


model LeaveRequest {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  employee       Employee @relation(fields: [employeeId], references: [id])
  employeeId     String @db.ObjectId
  startDate      DateTime
  endDate        DateTime
  status         LeaveStatus
}

enum LeaveStatus {
  PENDING
  APPROVED
  REJECTED
}

model Payroll {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  employee       Employee @relation(fields: [employeeId], references: [id])
  employeeId     String @db.ObjectId
  salary         Float
  processedDate  DateTime
}

model Department {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  employees      Employee[]
}

model SalaryCriteria {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  criteriaName   String
  description    String?
  baseSalary     Float
  bonus          Float?
  employees      Employee[]
}
